@model CylnderEntities.usp_tblUserMasterGetByID_Result

@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>EditUser</h2>
<hr />
<div class="container" style="margin-top:50px;">
    <div class="row">
        <div class="col-md-4 col-lg-4  col-xs-12">
            <h4> @Html.ActionLink("Back to User List", "ListUsers")</h4>
        </div>
    </div>
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">




                <div class="form-group">
                    @Html.LabelFor(model => model.User_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.User_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contact_Number, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.Contact_Number)
                        @Html.HiddenFor(model => model.Contact_Number)
                        @*@Html.EditorFor(model => model.Contact_Number, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Contact_Number, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Login_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @*@Html.EditorFor(model => model.Login_Id, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DisplayFor(model => model.Login_Id)
                        @Html.HiddenFor(model => model.Login_Id)
                        @Html.ValidationMessageFor(model => model.Login_Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IMIE1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.IMIE1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IMIE1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IMIE2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.IMIE2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IMIE2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Group_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @*@Html.EditorFor(model => model.Group_Id, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Group_Id, ViewBag.Group_Id as List<SelectListItem>, "Select Group")
                        @Html.ValidationMessageFor(model => model.Group_Id, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">

                        @Html.DropDownListFor(model => model.Branch_Id, ViewBag.Group_Id as List<SelectListItem>, "Select Group")
                        @Html.ValidationMessageFor(model => model.Branch_Id, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.UserStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.UserStatus)
                            @Html.ValidationMessageFor(model => model.UserStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-4">
                        <input type="submit" value="Save" class="btn btn-primary" id="btnsave" name="btnsave" onclick="return confirm('Are you sure to save changes');" />
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="col-md-4 col-lg-4  col-xs-12">
            <h4> @Html.ActionLink("Back to User List", "ListUsers")</h4>
        </div>
    </div>
</div>  